public class TwoSum_1 {
    //O(n*logn)

    /*public int[] twoSum(int[] nums, int target){
        int result[]=new int[2];
        for(int i=0;i<nums.length-1;i++)
        {
            for(int j=i+1;j<nums.length;j++)
            {
                if(target==nums[i]+nums[j])
                {
                    result[0]=i;
                    result[1]=j;
                    return result;
                }
            }
        }
        return result;
    }*/

    //O(n)
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> hashMap=new HashMap<>();
        for(int i=0;i<nums.length;++i)
        {
            if(hashMap.containsKey(target-nums[i]))
            {
                return new int[]{i,hashMap.get(target-nums[i])};
            }
            else hashMap.put(nums[i],i);
        }
        return null;
    }

    //Solution3 167. Two Sum II - Input array is sorted O(n) and inner space
}
