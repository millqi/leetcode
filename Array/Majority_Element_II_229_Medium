public class Majority_Element_II_229_Medium {
    /*
    Time O(nlog(n))
    Space O(1)
     */
    public List<Integer> majorityElement(int[] nums) {
        ArrayList<Integer> res=new ArrayList<>();
        Arrays.sort(nums);
        int n=nums.length/3,i=0;
        while(i<nums.length)
        {
            int cur=1;
            while(i+1<nums.length&&nums[i]==nums[i+1])
            {
                ++i;
                cur++;
            }
            if(cur>n) res.add(nums[i]);
            ++i;
        }
        return res;
    }
    /*
    Boyer-Moore Voting
    Time O(n)
    Space O(1)
    public List<Integer> majorityElement(int[] nums) {
        int num1=-1;
        int num2=-1;
        int count1=0,count2=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==num1)count1++;
            else if(nums[i]==num2)count2++;
            else if(count1==0){
                num1=nums[i];
                count1=1;
            }
            else if(count2==0){
                num2=nums[i];
                count2=1;
            }
            else{
                count1--;
                count2--;
            }
        }
        List<Integer> ans=new ArrayList<>();
        count1=0;
        count2=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==num1)count1++;
            else if(nums[i]==num2)count2++;
    }
        if(count1>nums.length/3)ans.add(num1);
        if(count2>nums.length/3)ans.add(num2);
        return ans;
    }
     */
}
