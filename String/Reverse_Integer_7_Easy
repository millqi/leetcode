public class Reverse_Integer_7_Easy {
    /*
    Time Complexity: O(log(x))
    Space Complexity: O(1)
     */
    public int reverse(int x) {
        int rev=0;
        while(x!=0)
        {
            //Pop simulation(start from the end of x)
            int pop=x%10;
            x/=10;
            //Prevent overflow
            if(rev>Integer.MAX_VALUE/10||(rev==Integer.MAX_VALUE/10&&pop>7))return 0;
            if(rev<Integer.MIN_VALUE/10||(rev==Integer.MIN_VALUE/10&&pop<-8))return 0;
            //Push simulation(Push after pop)
            rev=rev*10+pop;
        }
        return rev;
    }
}
