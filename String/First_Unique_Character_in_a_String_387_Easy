public class First_Unique_Character_in_a_String_387_Easy {
    /*
    One Pass Solution
    Data flow
    Time O(n)
    Space O(1)
     */
    public int firstUniqChar(String s) {
        Map<Character,Integer> map=new LinkedHashMap<>();
        Set<Character> set=new HashSet<>();
        for(int i=0;i<s.length();++i)
        {
            if(set.contains(s.charAt(i)))
            {
                if(map.get(s.charAt(i))!=null)
                    map.remove(s.charAt(i));
            }
            else {
                map.put(s.charAt(i), i);
                set.add(s.charAt(i));
            }
        }
        return map.size()==0?-1:map.entrySet().iterator().next().getValue();
    }

    /*
    Two Pass
    Faster
    public int firstUniqChar(String s) {
        int res[]=new int[26];
        for(int i=0;i<s.length();++i)
        {
            ++res[s.charAt(i)-'a'];
        }
        for(int i=0;i<s.length();++i)
        {
            if (res[s.charAt(i)-'a']==1)
                return i;
        }
        return -1;
    }
    */
}
