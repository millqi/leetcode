public class Random_Pick_with_Weight_528_Medium {
    /*
    Use accumulated freq array to get idx.
w[] = {2,5,3,4} => wsum[] = {2,7,10,14}
then get random val random.nextInt(14)+1, idx is in range [1,14]

idx in [1,2] return 0
idx in [3,7] return 1
idx in [8,10] return 2
idx in [11,14] return 3
他们的间隔就是数组中给出的权重
     */
    class Solution {
        Random random=new Random();
        int preSum[];
        public Solution(int[] w) {
            for(int i=1;i<w.length;++i)
            {
                w[i]+=w[i-1];
            }
            preSum=w;
        }

        public int pickIndex() {
            int n=preSum.length,frt=0,end=n-1;
            int pickNum= random.nextInt(preSum[n-1])+1;
            while(frt<end)//使用下标进行计算 Example 13
            {
                int mid=frt+(end-frt)/2;
                if(preSum[mid]==pickNum)
                {
                    return mid;
                }
                else if(preSum[mid]<pickNum)
                {
                    frt=mid+1;//当pickNum为13 mid为2 将frt+1可取14 返回最后一位
                }
                else {
                    end=mid;
                }
            }
            return frt;
        }
    }
}
